2024-11-02 22:45:29 [[31MERROR[39M]: Create Participation error: 
Invalid `prisma.participation.create()` invocation in
C:\Users\Cedric\Desktop\spinbet-backendv2\src\services\participationService.ts:7:37

  4 
  5 export class ParticipationService {
  6     async createParticipation(data: { firstName: string; lastName: string; percentage: number; userId: number }) {
â†’ 7         return prisma.participation.create({
              data: {
                firstName: "John",
                lastName: "Doe",
                percentage: 20,
                userId: undefined,
            +   user: {
            +     create: UserCreateWithoutParticipationsInput | UserUncheckedCreateWithoutParticipationsInput,
            +     connectOrCreate: UserCreateOrConnectWithoutParticipationsInput,
            +     connect: UserWhereUniqueInput
            +   }
              }
            })

Argument `user` is missing.
2024-11-02 22:45:29 [[31MERROR[39M]: Update Participation error: 
Invalid `prisma.participation.update()` invocation in
C:\Users\Cedric\Desktop\spinbet-backendv2\src\services\participationService.ts:19:37

  16 }
  17 
  18 async updateParticipation(id: string, data: { firstName: string; lastName: string; percentage: number }) {
â†’ 19     return prisma.participation.update({
           where: {
         +   id: Int
           },
           data: {
             firstName: "John",
             lastName: "Smith",
             percentage: 30
           }
         })

Argument `id` is missing.
2024-11-02 22:45:29 [[31MERROR[39M]: Delete Participation error: 
Invalid `prisma.participation.delete()` invocation in
C:\Users\Cedric\Desktop\spinbet-backendv2\src\services\participationService.ts:26:43

  23 }
  24 
  25 async deleteParticipation(id: string) {
â†’ 26     return prisma.participation.delete({
           where: {
         +   id: Int
           }
         })

Argument `id` is missing.
2024-11-02 22:55:28 [[31MERROR[39M]: Registration error: 
Invalid `prisma.user.create()` invocation in
C:\Users\Cedric\Desktop\spinbet-backendv2\src\services\authService.ts:11:40

   8 export class AuthService {
   9     async register(data: { name: string; email: string; password: string }) {
  10         const hashedPassword = await bcrypt.hash(data.password, 10);
â†’ 11         const user = await prisma.user.create(
Unique constraint failed on the fields: (`email`)
2024-11-02 22:58:37 [[31MERROR[39M]: Registration error: Email already exists
2024-11-02 23:02:17 [[31MERROR[39M]: Registration error: Email already exists
2024-11-02 23:04:48 [[31MERROR[39M]: Registration error: Email already exists
